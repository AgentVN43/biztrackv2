const db = require('./app/config/db.config');
const CustomerModel = require('./app/modules/customers/customer.model');

async function testDebtCalculation() {
  try {
    console.log('üß™ B·∫Øt ƒë·∫ßu test logic t√≠nh debt m·ªõi...\n');

    // Test case 1: Kh√°ch h√†ng c√≥ 1 ƒë∆°n h√†ng ƒë∆°n gi·∫£n
    console.log('üìã Test Case 1: ƒê∆°n h√†ng ƒë∆°n gi·∫£n');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 500');
    console.log('  - Total refund: 0');
    console.log('  - Expected debt: 500');
    const debt1 = (1000 - 0) - 500;
    console.log(`  - Calculated debt: ${debt1}`);
    console.log(`  - Result: ${debt1 === 500 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    // Test case 2: Kh√°ch h√†ng thanh to√°n tr∆∞·ªõc, tr·∫£ h√†ng m·ªôt ph·∫ßn
    console.log('üìã Test Case 2: Thanh to√°n tr∆∞·ªõc, tr·∫£ h√†ng m·ªôt ph·∫ßn');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 1000');
    console.log('  - Total refund: 300');
    console.log('  - Expected debt: -300 (√¢m, c·∫ßn ho√†n ti·ªÅn)');
    const debt2 = (1000 - 300) - 1000;
    console.log(`  - Calculated debt: ${debt2}`);
    console.log(`  - Result: ${debt2 === -300 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    // Test case 3: Kh√°ch h√†ng thanh to√°n tr∆∞·ªõc, tr·∫£ h·∫øt h√†ng
    console.log('üìã Test Case 3: Thanh to√°n tr∆∞·ªõc, tr·∫£ h·∫øt h√†ng');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 1000');
    console.log('  - Total refund: 1000');
    console.log('  - Expected debt: -1000 (√¢m, c·∫ßn ho√†n ti·ªÅn)');
    const debt3 = (1000 - 1000) - 1000;
    console.log(`  - Calculated debt: ${debt3}`);
    console.log(`  - Result: ${debt3 === -1000 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    // Test case 4: Kh√°ch h√†ng thanh to√°n m·ªôt ph·∫ßn, tr·∫£ h√†ng m·ªôt ph·∫ßn
    console.log('üìã Test Case 4: Thanh to√°n m·ªôt ph·∫ßn, tr·∫£ h√†ng m·ªôt ph·∫ßn');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 500');
    console.log('  - Total refund: 300');
    console.log('  - Expected debt: 200');
    const debt4 = (1000 - 300) - 500;
    console.log(`  - Calculated debt: ${debt4}`);
    console.log(`  - Result: ${debt4 === 200 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    // Test case 5: Kh√°ch h√†ng ch∆∞a thanh to√°n, tr·∫£ h√†ng m·ªôt ph·∫ßn
    console.log('üìã Test Case 5: Ch∆∞a thanh to√°n, tr·∫£ h√†ng m·ªôt ph·∫ßn');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 0');
    console.log('  - Total refund: 300');
    console.log('  - Expected debt: 700');
    const debt5 = (1000 - 300) - 0;
    console.log(`  - Calculated debt: ${debt5}`);
    console.log(`  - Result: ${debt5 === 700 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    // Test case 6: Kh√°ch h√†ng thanh to√°n v∆∞·ª£t qu√°, tr·∫£ h√†ng
    console.log('üìã Test Case 6: Thanh to√°n v∆∞·ª£t qu√°, tr·∫£ h√†ng');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 1200');
    console.log('  - Total refund: 300');
    console.log('  - Expected debt: -500 (√¢m, c·∫ßn ho√†n ti·ªÅn)');
    const debt6 = (1000 - 300) - 1200;
    console.log(`  - Calculated debt: ${debt6}`);
    console.log(`  - Result: ${debt6 === -500 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    // Test case 7: Tr∆∞·ªùng h·ª£p refund v∆∞·ª£t qu√° final_amount
    console.log('üìã Test Case 7: Refund v∆∞·ª£t qu√° final_amount');
    console.log('  - Final amount: 1000');
    console.log('  - Amount paid: 500');
    console.log('  - Total refund: 1200');
    console.log('  - Expected debt: -500 (√¢m, c·∫ßn ho√†n ti·ªÅn)');
    const debt7 = Math.max(0, 1000 - 1200) - 500;
    console.log(`  - Calculated debt: ${debt7}`);
    console.log(`  - Result: ${debt7 === -500 ? '‚úÖ PASS' : '‚ùå FAIL'}\n`);

    console.log('‚úÖ Ho√†n th√†nh test logic t√≠nh debt!');

  } catch (error) {
    console.error('‚ùå L·ªói trong qu√° tr√¨nh test:', error);
  } finally {
    process.exit(0);
  }
}

// Ch·∫°y test
testDebtCalculation(); 